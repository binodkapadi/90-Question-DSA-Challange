SOLUTION ==> [(Two-pointer + Sorting)]

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();
        vector<vector<int>> result;

        sort(nums.begin(), nums.end());

        for(int i = 0; i < n-3; i++){
            if(i > 0 && nums[i] == nums[i-1]) continue;

            for(int j = i +1; j < n-2; j++){
                if(j > i + 1 && nums[j] == nums[j-1]) continue;

                long long rem = (long long)target - nums[i] - nums[j];
                int start = j + 1;
                int end = n - 1;

                while(start < end){
                    long long sum = (long long)nums[start] + nums[end];

                    if(sum == rem){
                        result.push_back({nums[i], nums[j], nums[start], nums[end]});
                        while(start < end && nums[start] == nums[start + 1]) start ++;
                        while(start < end && nums[end] == nums[end - 1]) end--;

                        start++;
                        end--;
                    }
                    else if(sum < rem) start++;
                    else end--;
                }
            }
        }
        return result;        
    }
};
